name: generar-predicciones

on:
  workflow_dispatch:
    inputs:
      csv_url:
        description: "URL del CSV (19 features). If empty, uses local CSV in the repo."
        required: false
        default: ""
  schedule:
    - cron: "0 10,22 * * *"  # twice per day, UTC

jobs:
  predict:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Write requirements.txt
        shell: bash
        run: |
          cat > requirements.txt <<'REQ'
          numpy==1.26.4
          pandas==2.1.4
          scikit-learn==1.3.2
          joblib==1.4.2
          h5py==3.10.0
          tensorflow==2.18.0
          REQ

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: requirements.txt

      - name: Install deps
        shell: bash
        run: |
          set -euxo pipefail
          python -m pip install -U pip wheel setuptools
          pip install -r requirements.txt
          python - <<'PY'
          import sys, tensorflow as tf, numpy, pandas, h5py
          print("PY:", sys.version)
          print("TF:", tf.__version__)
          print("NP:", numpy.__version__)
          print("PD:", pandas.__version__)
          print("H5PY:", h5py.__version__)
          PY

      - name: Run predict
        shell: bash
        run: |
          set -euxo pipefail
          CSV_URL="${{ github.event.inputs.csv_url }}"
          if [[ -n "$CSV_URL" ]]; then
            python scripts/predict.py --csv "$CSV_URL" --out public/predicciones.json
          else
            python scripts/predict.py --out public/predicciones.json
          fi
          echo "=== public/ ==="
          ls -lah public/ || true
          echo "=== JSON head ==="
          head -c 1200 public/predicciones.json 2>/dev/null || true

      - name: Verify JSON content
        shell: bash
        run: |
          set -euo pipefail
          python - <<'PY'
          import json,sys,os
          p="public/predicciones.json"
          if not os.path.exists(p): 
              sys.exit("predicciones.json not found")
          with open(p, "r", encoding="utf-8") as f:
              data=json.load(f)
          for k in ("generated_at","items"):
              if k not in data: 
                  sys.exit(f"Missing key in JSON: {k}")
          print(f"OK JSON. items={len(data['items'])}")
          PY

      - name: Commit JSON
        if: success()
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A public/predicciones.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore: update predicciones.json"
          git push
